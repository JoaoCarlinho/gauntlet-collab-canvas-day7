name: Railway Simple PR Deploy

on:
  pull_request:
    branches: [ main, master, develop ]
    paths:
      - 'frontend/**'
      - '.github/workflows/railway-simple-pr.yml'

jobs:
  test-and-deploy:
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        run: |
          cd frontend
          npm ci

      - name: Run validation
        run: |
          cd frontend
          npm run validation:typescript
          
      - name: Run ESLint (allow warnings)
        run: |
          cd frontend
          npx eslint src/ --ext .ts,.tsx --max-warnings 1000 || true

      - name: Test build
        run: |
          cd frontend
          npm run build:railway
        env:
          VITE_API_URL: https://gauntlet-collab-canvas-day7-production.up.railway.app
          VITE_SOCKET_URL: https://gauntlet-collab-canvas-day7-production.up.railway.app
          NODE_ENV: production

      - name: Comment PR with build status
        uses: actions/github-script@v7
        with:
          script: |
            const commentBody = `## âœ… Frontend Build Status
            
            **Status:** Build successful and ready for Railway deployment
            
            **Build Info:**
            - Branch: \`${{ github.head_ref }}\`
            - Commit: \`${{ github.sha }}\`
            - Triggered by: @${{ github.actor }}
            
            **Next Steps:**
            1. Merge this PR to trigger Railway deployment
            2. Railway will automatically deploy to production
            3. Monitor deployment in Railway dashboard
            
            ---
            *Build completed successfully at ${{ github.event.head_commit.timestamp }}*`;
            
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: commentBody
            });
