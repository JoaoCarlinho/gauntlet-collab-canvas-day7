name: Railway Simple PR Deploy

on:
  pull_request:
    branches: [ main, master, develop ]
    paths:
      - 'frontend/**'
      - '.github/workflows/railway-simple-pr.yml'

jobs:
  test-and-deploy:
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false
    permissions:
      contents: read
      issues: write
      pull-requests: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        run: |
          cd frontend
          npm ci

      - name: Run TypeScript validation
        run: |
          cd frontend
          npm run validation:typescript
          
      - name: Run ESLint (Phase 4 progressive strategy)
        run: |
          cd frontend
          echo "üîç Running ESLint with Phase 4 progressive warning strategy..."
          
          # Run ESLint and capture results
          npm run lint -- --format=json > eslint-report.json || true
          npm run lint || echo "‚ö†Ô∏è ESLint completed with warnings (Phase 4 progressive strategy)"
          
          # Generate detailed summary
          if [ -f eslint-report.json ]; then
            WARNING_COUNT=$(cat eslint-report.json | jq '[.[] | .messages[] | select(.severity == 1)] | length' 2>/dev/null || echo "0")
            ERROR_COUNT=$(cat eslint-report.json | jq '[.[] | .messages[] | select(.severity == 2)] | length' 2>/dev/null || echo "0")
            echo "üìä ESLint Summary: $ERROR_COUNT errors, $WARNING_COUNT warnings"
            
            # Save summary for PR comment
            echo "ESLINT_ERRORS=$ERROR_COUNT" >> $GITHUB_ENV
            echo "ESLINT_WARNINGS=$WARNING_COUNT" >> $GITHUB_ENV
            
            if [ "$ERROR_COUNT" -gt 0 ]; then
              echo "‚ùå Build failed due to ESLint errors"
              exit 1
            else
              echo "‚úÖ Build continues with $WARNING_COUNT warnings (Phase 4 progressive strategy)"
            fi
          fi

      - name: Test build
        run: |
          cd frontend
          npm run build:railway
        env:
          VITE_API_URL: https://gauntlet-collab-canvas-day7-production.up.railway.app
          VITE_SOCKET_URL: https://gauntlet-collab-canvas-day7-production.up.railway.app
          NODE_ENV: production

      - name: Comment PR with build status
        uses: actions/github-script@v7
        continue-on-error: true
        with:
          script: |
            try {
              const commentBody = `## ‚úÖ Frontend Build Status
              
              **Status:** Build successful and ready for Railway deployment
              
              **Build Info:**
              - Branch: \`${{ github.head_ref }}\`
              - Commit: \`${{ github.sha }}\`
              - Triggered by: @${{ github.actor }}
              
              **Code Quality (Phase 4 Progressive Strategy):**
              - ESLint Errors: ${{ env.ESLINT_ERRORS || '0' }}
              - ESLint Warnings: ${{ env.ESLINT_WARNINGS || '0' }}
              - Status: ‚úÖ Build continues with warnings (Phase 4 progressive linting)
              
              **Next Steps:**
              1. Merge this PR to trigger Railway deployment
              2. Railway will automatically deploy to production
              3. Monitor deployment in Railway dashboard
              
              **Phase 4 Notes:**
              - Warnings are allowed as part of progressive linting strategy
              - Future phases will gradually reduce warning limits
              - Focus is on preventing errors while allowing gradual improvement
              
              ---
              *Build completed successfully at ${{ github.event.head_commit.timestamp }}*`;
              
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: commentBody
              });
              
              console.log('‚úÖ Successfully commented on PR');
            } catch (error) {
              console.log('‚ö†Ô∏è Failed to comment on PR:', error.message);
              console.log('Build was successful, but could not post comment due to permissions');
            }
