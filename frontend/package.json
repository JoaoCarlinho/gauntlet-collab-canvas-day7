{
  "name": "collabcanvas-frontend",
  "private": true,
  "version": "0.0.0",
  "type": "module",
  "scripts": {
    "dev": "vite",
    "build": "tsc && vite build",
    "build:railway": "tsc && vite build --mode production",
    "start": "vite preview --port $PORT --host 0.0.0.0",
    "start:railway": "vite preview --port $PORT --host 0.0.0.0",
    "lint": "eslint . --ext ts,tsx --report-unused-disable-directives --max-warnings 1000",
    "lint:progressive": "eslint . --ext ts,tsx --config .eslintrc.progressive.cjs --report-unused-disable-directives --max-warnings 1000",
    "preview": "vite preview",
    "test": "vitest",
    "test:ui": "vitest --ui",
    "test:e2e": "cypress open",
    "test:e2e:headless": "cypress run",
    "test:e2e:local": "cypress open --config-file cypress.config.local.ts",
    "test:e2e:local:headless": "cypress run --config-file cypress.config.local.ts",
    "test:e2e:local-dev": "cypress open --config-file cypress.config.local-dev.ts",
    "test:e2e:local-dev:headless": "cypress run --config-file cypress.config.local-dev.ts",
    "test:object-visibility": "cypress run --spec 'cypress/e2e/object-visibility.cy.ts' --config-file cypress.config.local-dev.ts",
    "test:object-visibility:open": "cypress open --spec 'cypress/e2e/object-visibility.cy.ts' --config-file cypress.config.local-dev.ts",
    "test:basic": "cypress run --spec 'cypress/e2e/basic-canvas-test.cy.ts' --config-file cypress.config.local-dev.ts",
    "test:basic:open": "cypress open --spec 'cypress/e2e/basic-canvas-test.cy.ts' --config-file cypress.config.local-dev.ts",
    "test:realtime": "cypress run --spec 'cypress/e2e/realtime-object-visibility.cy.ts' --config-file cypress.config.local-dev.ts",
    "test:realtime:open": "cypress open --config-file cypress.config.local-dev.ts",
    "test:simple": "cypress run --spec 'cypress/e2e/simple-visibility-test.cy.ts' --config-file cypress.config.local-dev.ts",
    "test:simple:open": "cypress open --config-file cypress.config.local-dev.ts",
    "test:production": "cypress run --spec 'cypress/e2e/production-visibility-test.cy.ts' --config-file cypress.config.local.ts",
    "test:production:open": "cypress open --config-file cypress.config.local.ts",
    "test:authenticated": "cypress run --spec 'cypress/e2e/authenticated-visibility-test.cy.ts' --config-file cypress.config.local.ts",
    "test:authenticated:open": "cypress open --config-file cypress.config.local.ts",
    "test:debug": "cypress run --spec 'cypress/e2e/debug-screenshots.cy.ts' --config-file cypress.config.local.ts",
    "test:debug:open": "cypress open --config-file cypress.config.local.ts",
    "test:canvas": "cypress run --spec 'cypress/e2e/canvas-interaction-test.cy.ts' --config-file cypress.config.local.ts",
    "test:canvas:open": "cypress open --config-file cypress.config.local.ts",
    "test:manual": "cypress run --spec 'cypress/e2e/manual-auth-canvas-test.cy.ts' --config-file cypress.config.local.ts",
    "test:manual:open": "cypress open --config-file cypress.config.local.ts",
    "test:email-passkey": "cypress run --spec 'cypress/e2e/email-passkey-test.cy.ts' --config-file cypress.config.local.ts",
    "test:email-passkey:open": "cypress open --config-file cypress.config.local.ts",
    "test:user-stories": "cypress run --spec 'cypress/e2e/user-stories.cy.ts' --config-file cypress.config.local.ts",
    "test:user-stories:open": "cypress open --spec 'cypress/e2e/user-stories.cy.ts' --config-file cypress.config.local.ts",
    "test:production-login": "cypress run --spec 'cypress/e2e/production-login-test.cy.ts' --config-file cypress.config.local.ts",
    "test:production-login:open": "cypress open --config-file cypress.config.local.ts",
    "test:simple-screenshot": "cypress run --spec 'cypress/e2e/simple-screenshot-test.cy.ts' --config-file cypress.config.local.ts",
    "test:simple-screenshot:open": "cypress open --config-file cypress.config.local.ts",
    "test:headless-screenshot": "cypress run --spec 'cypress/e2e/headless-screenshot-test.cy.ts' --config-file cypress.config.local.ts",
    "test:basic-screenshot": "cypress run --spec 'cypress/e2e/basic-screenshot.cy.ts' --config-file cypress.config.minimal.ts",
    "test:login-screenshot": "cypress run --spec 'cypress/e2e/login-screenshot.cy.ts' --config-file cypress.config.minimal.ts",
    "test:canvas-screenshots": "cypress run --spec 'cypress/e2e/canvas-screenshots.cy.ts' --config-file cypress.config.minimal.ts",
    "test:manual-canvas": "cypress open --config-file cypress.config.minimal.ts",
    "test:canvas-deletion": "cypress run --spec 'cypress/e2e/canvas-deletion.cy.ts' --config-file cypress.config.local-dev.ts",
    "test:canvas-deletion:open": "cypress open --spec 'cypress/e2e/canvas-deletion.cy.ts' --config-file cypress.config.local-dev.ts",
    "test:production-deletion": "cypress run --spec 'cypress/e2e/production-canvas-deletion.cy.ts' --config-file cypress.config.production.ts",
    "test:production-deletion:open": "cypress open --spec 'cypress/e2e/production-canvas-deletion.cy.ts' --config-file cypress.config.production.ts",
    "test:object-creation-fix": "cypress run --spec 'cypress/e2e/object-creation-state-fix.cy.ts' --config-file cypress.config.local-dev.ts",
    "test:object-creation-fix:open": "cypress open --spec 'cypress/e2e/object-creation-state-fix.cy.ts' --config-file cypress.config.local-dev.ts",
    "test:enhanced-interactions": "cypress run --spec 'cypress/e2e/enhanced-object-interactions.cy.ts' --config-file cypress.config.local-dev.ts",
    "test:enhanced-interactions:open": "cypress open --spec 'cypress/e2e/enhanced-object-interactions.cy.ts' --config-file cypress.config.local-dev.ts",
    "test:cursor-tooltips": "cypress run --spec 'cypress/e2e/cursor-tooltips.cy.ts' --config-file cypress.config.local-dev.ts",
    "test:cursor-tooltips:open": "cypress open --spec 'cypress/e2e/cursor-tooltips.cy.ts' --config-file cypress.config.local-dev.ts",
    "test:e2e:auth": "cypress run --config-file cypress.config.auth.ts",
    "test:e2e:auth:open": "cypress open --config-file cypress.config.auth.ts",
    "test:screenshots": "cypress run --spec 'cypress/e2e/screenshot-generation.cy.ts' --config-file cypress.config.auth.ts",
    "test:screenshots:open": "cypress open --spec 'cypress/e2e/screenshot-generation.cy.ts' --config-file cypress.config.auth.ts",
    "test:auth-objects": "cypress run --spec 'cypress/e2e/authenticated-object-tests.cy.ts' --config-file cypress.config.auth.ts",
    "test:auth-objects:open": "cypress open --spec 'cypress/e2e/authenticated-object-tests.cy.ts' --config-file cypress.config.auth.ts",
    "test:multi-user": "cypress run --spec 'cypress/e2e/multi-user-collaboration.cy.ts' --config-file cypress.config.auth.ts",
    "test:multi-user:open": "cypress open --spec 'cypress/e2e/multi-user-collaboration.cy.ts' --config-file cypress.config.auth.ts",
    "test:comprehensive": "npm run test:playwright:all && npm run test:e2e:auth",
    "test:full-suite": "npm run test:comprehensive && npm run test:auth-objects && npm run test:multi-user",
    "test:dev-screenshots": "cypress run --spec 'cypress/e2e/dev-screenshot-generation.cy.ts' --config-file cypress.config.auth.ts",
    "test:dev-screenshots:open": "cypress open --spec 'cypress/e2e/dev-screenshot-generation.cy.ts' --config-file cypress.config.auth.ts",
    "test:canvas-videos": "cypress run --spec 'cypress/e2e/canvas-object-videos.cy.ts' --config-file cypress.config.auth.ts",
    "test:canvas-videos:open": "cypress open --spec 'cypress/e2e/canvas-object-videos.cy.ts' --config-file cypress.config.auth.ts",
    "test:objects-all-types-video": "cypress run --spec 'cypress/e2e/dev-objects-all-types-video.cy.ts' --config-file cypress.config.auth.ts",
    "test:objects-all-types-video:open": "cypress open --spec 'cypress/e2e/dev-objects-all-types-video.cy.ts' --config-file cypress.config.auth.ts",
    "test:playwright": "playwright test",
    "test:playwright:ui": "playwright test --ui",
    "test:playwright:headed": "playwright test --headed",
    "test:playwright:debug": "playwright test --debug",
    "test:playwright:chromium": "playwright test --project=chromium",
    "test:playwright:firefox": "playwright test --project=firefox",
    "test:playwright:webkit": "playwright test --project=webkit",
    "test:playwright:mobile": "playwright test --project='Mobile Chrome' --project='Mobile Safari'",
    "test:playwright:production": "playwright test --project=production-chromium --project=production-mobile",
    "test:playwright:cross-browser": "playwright test --project=chromium --project=firefox --project=webkit --project=edge",
    "test:playwright:auth": "playwright test playwright-tests/auth/",
    "test:playwright:canvas": "playwright test playwright-tests/canvas/",
    "test:playwright:collaboration": "playwright test playwright-tests/collaboration/",
    "test:playwright:mobile-tests": "playwright test playwright-tests/mobile/",
    "test:playwright:cross-browser-tests": "playwright test playwright-tests/cross-browser/",
    "test:playwright:phase2": "playwright test playwright-tests/test-runners/run-phase2-tests.ts",
    "test:playwright:all": "playwright test --project=chromium --project=firefox --project=webkit --project='Mobile Chrome' --project='Mobile Safari'",
    "automation:start-monitoring": "cd .. && ./scripts/run-phase3-automation.sh start-monitoring",
    "automation:stop-monitoring": "cd .. && ./scripts/run-phase3-automation.sh stop-monitoring",
    "automation:test": "cd .. && ./scripts/run-phase3-automation.sh test",
    "automation:report": "cd .. && ./scripts/run-phase3-automation.sh report",
    "automation:all": "cd .. && ./scripts/run-phase3-automation.sh all",
    "incident:create": "cd .. && ./scripts/incident-response.sh",
    "escalation:create-policy": "cd .. && ./scripts/escalation-procedures.sh create-policy",
    "escalation:health-check": "cd .. && ./scripts/escalation-procedures.sh health-check",
    "rollback:deploy": "cd .. && ./scripts/rollback-deployment.sh",
    "notifications:config": "cd .. && ./scripts/test-notifications.sh create-config",
    "notifications:test": "cd .. && ./scripts/test-notifications.sh test-notification",
    "optimization:performance": "cd .. && ./scripts/run-phase4-optimization.sh performance",
    "optimization:ml": "cd .. && ./scripts/run-phase4-optimization.sh ml",
    "optimization:scenarios": "cd .. && ./scripts/run-phase4-optimization.sh scenarios",
    "optimization:reporting": "cd .. && ./scripts/run-phase4-optimization.sh reporting",
    "optimization:reliability": "cd .. && ./scripts/run-phase4-optimization.sh reliability",
    "optimization:parallel": "cd .. && ./scripts/run-phase4-optimization.sh parallel",
    "optimization:benchmarks": "cd .. && ./scripts/run-phase4-optimization.sh benchmarks",
    "optimization:report": "cd .. && ./scripts/run-phase4-optimization.sh report",
    "optimization:all": "cd .. && ./scripts/run-phase4-optimization.sh all",
    "ml:predict": "cd .. && python3 scripts/ml-failure-predictor.py",
    "scenarios:run": "cd .. && python3 scripts/custom-test-scenarios.py",
    "reporting:generate": "cd .. && python3 scripts/advanced-reporting.py",
    "reliability:analyze": "cd .. && python3 scripts/test-reliability-improver.py",
    "validation:build": "cd .. && ./scripts/validate-build.sh",
    "validation:typescript": "tsc --noEmit",
    "validation:lint": "eslint src/ --ext .ts,.tsx --max-warnings 1000",
    "validation:prettier": "prettier --check src/",
    "validation:all": "npm run validation:typescript && npm run validation:lint && npm run validation:prettier && npm run build"
  },
  "dependencies": {
    "axios": "^1.5.0",
    "clsx": "^2.0.0",
    "firebase": "^10.3.1",
    "konva": "^9.2.0",
    "lucide-react": "^0.279.0",
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "react-hot-toast": "^2.4.1",
    "react-konva": "^18.2.10",
    "react-router-dom": "^6.15.0",
    "socket.io-client": "^4.7.2",
    "tailwind-merge": "^1.14.0",
    "zustand": "^4.4.1"
  },
  "devDependencies": {
    "@playwright/test": "^1.56.1",
    "@testing-library/jest-dom": "^6.1.3",
    "@testing-library/react": "^13.4.0",
    "@testing-library/user-event": "^14.4.3",
    "@types/react": "^18.2.15",
    "@types/react-dom": "^18.2.7",
    "@types/uuid": "^10.0.0",
    "@typescript-eslint/eslint-plugin": "^6.21.0",
    "@typescript-eslint/parser": "^6.21.0",
    "@vitejs/plugin-react": "^4.0.3",
    "autoprefixer": "^10.4.15",
    "cypress": "^13.3.0",
    "eslint": "^8.57.1",
    "eslint-plugin-react": "^7.37.5",
    "eslint-plugin-react-hooks": "^4.6.2",
    "eslint-plugin-react-refresh": "^0.4.3",
    "jsdom": "^22.1.0",
    "postcss": "^8.4.29",
    "tailwindcss": "^3.3.3",
    "typescript": "^5.0.2",
    "vite": "^4.4.5",
    "vitest": "^0.34.6"
  }
}
